module Not(a) -> out {
    Nand(a, a) -> out 
}

module And(a, b) -> out {
    Nand(a, b) -> temp
    Not(temp) -> out
}

module Or(a, b) -> out {
    Not(a) -> nA
    Not(b) -> nB
    And(nB, nA) -> temp1
    Not(temp1) -> out
}


module Mux(a, b, sel) -> out {
    Not(sel) -> notSel
    And(b, sel) -> and1
    And(a, notSel) -> and2
    Or(and1, and2) -> out
}

module Bit(in, load) -> out {
    Mux(dffOut, in, load) -> muxOut
    Dff(muxOut) -> dffOut //built-in module
    dffOut -> out
}

module Register(in[8], load) -> out[8] {
    Bit(in[0], load) -> out[0]
    Bit(in[1], load) -> out[1]
    Bit(in[2], load) -> out[2]
    Bit(in[3], load) -> out[3]
    Bit(in[4], load) -> out[4]
    Bit(in[5], load) -> out[5]
    Bit(in[6], load) -> out[6]
    Bit(in[7], load) -> out[7]
}
